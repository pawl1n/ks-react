---
import Layout from "../../layouts/Admin.astro";
import Profile from "../../types/Profile";
import Alps, { Column } from "../../types/Alps";
import Table from "../../components/admin/Table";

interface Param {
  params: { page: string };
}

export async function getStaticPaths() {
  return await fetch("http://localhost:8080/profile")
    .then((res) => res.json() as Promise<Profile>)
    .then((data) => {
      const paths: Param[] = [];

      for (const key in data._links) {
        if (key === "self") continue;
        paths.push({ params: { page: key } });
      }

      return paths;
    })
    .catch();
}

const { page } = Astro.params;

const link = "http://localhost:8080/profile/" + page;
console.log(link);

const profile = await fetch(link)
  .then((data) => data.json() as Promise<Alps>)
  .catch();

const entry = profile.alps.descriptor.find((item) => item?.href ?? "" == link);
const columns: Column[] = entry.descriptor;
---

<Layout>
  <Table client:load title={entry?.id} columns={columns} entity={page} />
</Layout>
